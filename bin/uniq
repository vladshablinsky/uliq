#!/usr/bin/env ruby

require "optparse"

options = {}
opt_parser = OptionParser.new do |opts|
  opts.on("-aLIST", "--add=LIST",
      "add new key to specified list, require the LIST before executing") do |list|
    options[:list] = list
  end

  opts.on("-nLIST", "--new=LIST",
      "create new list, require the LIST before executing") do
    options[:new] = true
  end

  opts.on("-kKEY", "--key=KEY",
      "key you want to work with, require the KEY before executing") do |key|
    options[:key] = key
  end

  opts.on("-vVALUE", "--value=VALUE",
      "value for the key, require the VALUE before executing") do |val|
    options[:val] = val
  end

  opts.on("-l", "--list", "show all available lists") do |list|
    options[:list] = true
  end

  opts.on_tail("-h", "--help", "show this message") do
    puts opts
    exit
  end
end

begin
  opt_parser.parse!
rescue OptionParser::MissingArgument => e
  puts e.to_s
  exit
end
